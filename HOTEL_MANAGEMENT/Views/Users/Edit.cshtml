@model HOTEL_MANAGEMENT.Models.User

@{
    ViewBag.Title = "Login";
}
<link href="~/Content/StyleRegister.css" rel="stylesheet" type="text/css" media="screen" runat="server" />
@*<h2>Login</h2>*@


<section class="section_one" style="/*background:#00ff21;*/ /*background: #ebebeb; margin: 2% 0; padding: 2% 6%; border: solid 1px black; min-height: 692px;*/">
    <div class="container_one">
        <h2 class="text-center text-uppercase" style="color: #1781A6; font-weight: bold; ">Edit Profile</h2>
        <div class="wrapper">
            <div class="row row_one">
                <div class="col-md-12 col-lg-7" style="/*background:#ff0000;*/">
                    <img style="margin-left: 15px;" class="img" src="@Url.Content("~/Images/update.png")" alt="Register" />
                </div>

                @{ 
                    var typee = "";
                    if (Session["Id_user"] != null && Int32.Parse(Session["Id_user"].ToString()) == Model.Id_user)
                    {
                        typee = "disabled";
                    }
                }

            <div class="col-md-12 col-lg-5 column1" style="margin-left: -19px;">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.Id_user)
                <div class="form-horizontal">
                    <h4 class="text-center" style="color: #1781A6;">User</h4>
                    <hr />

                    <div class="form-group" style="padding: 0 10%;margin-top: -30px;">
                        @Html.LabelFor(model => model.First_Name, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @if (Session["Id_user"] != null && Int32.Parse(Session["Id_user"].ToString()) == Model.Id_user)
                            {
                                @Html.EditorFor(model => model.First_Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.First_Name, "", new { @class = "text-danger" })
                            }
                            else
                            {
                                @Html.HiddenFor(model => model.First_Name)
                                @Html.EditorFor(model => model.First_Name, new { htmlAttributes = new { @disabled = "disabled", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.First_Name, "", new { @class = "text-danger" })
                            }

                        </div>
                    </div>


                    <div class="form-group" style="padding: 0 10%; margin-top: -10px;">
                        @Html.LabelFor(model => model.Last_Name, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @if (Session["Id_user"] != null && Int32.Parse(Session["Id_user"].ToString()) == Model.Id_user)
                            {
                                @Html.EditorFor(model => model.Last_Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Last_Name, "", new { @class = "text-danger" })
                            }
                            else
                            {
                                @Html.HiddenFor(model => model.Last_Name)
                                @Html.EditorFor(model => model.Last_Name, new { htmlAttributes = new { disabled = "disabled", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Last_Name, "", new { @class = "text-danger" })
                            }

                        </div>
                    </div>

                    <div class="form-group" style="padding: 0 10%; margin-top: -10px;">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @if (Session["Id_user"] != null && Int32.Parse(Session["Id_user"].ToString()) == Model.Id_user)
                            {
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            }
                            else
                            {
                                @Html.HiddenFor(model => model.Email)
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { disabled = "disabled", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            }

                        </div>
                    </div>
                    <div class="form-group" style="padding: 0 10%; margin-top: -10px;">
                        @Html.LabelFor(model => model.Pwd, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @if (Session["Id_user"] != null && Int32.Parse(Session["Id_user"].ToString()) == Model.Id_user)
                            {
                                @Html.EditorFor(model => model.Pwd, new { htmlAttributes = new { type = "password", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Pwd, "", new { @class = "text-danger" })
                            }
                            else
                            {
                                @Html.HiddenFor(model => model.Pwd)
                                @Html.EditorFor(model => model.Pwd, new { htmlAttributes = new { disabled = "disabled", type = "password", @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Pwd, "", new { @class = "text-danger" })
                            }
                        </div><br />
                        <span class="alert-danger">@ViewBag.MessageError</span>
                    </div>
                    
                    @if (Session["Roles"] != null && Session["Roles"].ToString().ToLower() == "true")
                    {
                        <div class="form-group" style="padding: 0 10%; margin-top: -40px;margin-bottom: -20px;">
                            @Html.LabelFor(model => model.Roles, htmlAttributes: new { @class = "control-label" })
                            <div class="">
                                <div class="checkbox">
                                    @Html.EditorFor(model => model.Roles)
                                    @Html.ValidationMessageFor(model => model.Roles, "", new { @class = "text-danger" })
                                </div>
                            </div><br />
                            <span class="alert-danger">@ViewBag.MessageError</span>
                        </div>
                    }
                    else
                    {
                        @Html.HiddenFor(model => model.Roles)
                    }


                    <div class="form-group" style="padding: 2% 10%; margin-top: -10px;">
                        <div @*class="col-md-offset-2 col-md-10"*@>
                            <input type="submit" value="SAVE" class="btn btn-default btn-lg btn-block" style="background: #1781A6; color: white; " /><br />
                            @*<span class="alert-danger">@ViewBag.MessageError</span>*@
                            <h5 class="" style="margin-left: 30px; ;margin-top: -10px;">
                                @Html.ActionLink("do you already have an account ?", "Create")
                            </h5>

                        </div>
                    </div>
                </div>
                }
            </div>
            </div>
        </div>
    </div>
</section>